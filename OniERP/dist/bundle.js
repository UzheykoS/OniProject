!function(e){function t(t){for(var a,o,s=t[0],c=t[1],l=t[2],p=0,d=[];p<s.length;p++)o=s[p],r[o]&&d.push(r[o][0]),r[o]=0;for(a in c)Object.prototype.hasOwnProperty.call(c,a)&&(e[a]=c[a]);for(u&&u(t);d.length;)d.shift()();return i.push.apply(i,l||[]),n()}function n(){for(var e,t=0;t<i.length;t++){for(var n=i[t],a=!0,s=1;s<n.length;s++){var c=n[s];0!==r[c]&&(a=!1)}a&&(i.splice(t--,1),e=o(o.s=n[0]))}return e}var a={},r={1:0},i=[];function o(t){if(a[t])return a[t].exports;var n=a[t]={i:t,l:!1,exports:{}};return e[t].call(n.exports,n,n.exports,o),n.l=!0,n.exports}o.m=e,o.c=a,o.d=function(e,t,n){o.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(e,t){if(1&t&&(e=o(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(o.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)o.d(n,a,function(t){return e[t]}.bind(null,a));return n},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,"a",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p="";var s=window.webpackJsonp=window.webpackJsonp||[],c=s.push.bind(s);s.push=t,s=s.slice();for(var l=0;l<s.length;l++)t(s[l]);var u=c;i.push([215,0]),n()}({215:function(e,t,n){"use strict";n.r(t);var a,r,i,o,s,c,l,u,p,d,h,m,f=n(0),g=n(32),E=n(19),y=n(84),v=n(213),k=n(22),b=n.n(k),C=n(83),O=n.n(C),D=n(487);!function(e){e.Card="Карта",e.Cash="Наличка",e.Other="Другое"}(a||(a={})),function(e){e.PreOrder="Предзаказ",e.Shop="Витрина",e.Other="Другое"}(r||(r={})),function(e){e.Macaron="Макаронс",e.Zephyr="Зефир",e.Cake="Торт"}(i||(i={})),function(e){e.DorBluePear="Доб-Блю - Груша",e.ParmesanFigue="Пармезан - Инжир",e.StrawberryCheesecake="Клубничный Чизкейк",e.Raspberry="Малина",e.Currant="Смородина",e.LavenderBlackberry="Лаванда - Черника",e.MangoPassion="Манго - Маракуйя",e.CoffeeCaramel="Кофе - Солёная Карамель",e.Chocolate="Шоколад",e.Pistachio="Фисташка",e.LimeBasil="Лайм - Базилик"}(o||(o={})),function(e){e.Apple="Яблоко",e.ApricotPassionFruit="Абрикос - Маракуйя",e.Currant="Смородина",e.StrawberryCranberry="Клубника - Клюква"}(s||(s={})),function(e){e.Rio="Rio",e.CarrotCake="Carrot Cake",e.Soul="Soul",e.Pink="Pink",e[1/0]="Infinity"}(c||(c={})),function(e){e.Cappucino="Капучино",e.Latte="Латте",e.FlatWhite="Флет Вайт",e.Raf="Раф",e.Americano="Американо",e.AmericanoMilk="Американо с молоком",e.LongBlack="Лонг блэк",e.Espresso="Эспрессо",e.Doppio="Доппио",e.Machiato="Макиато",e.LatteLavender="Латте Лаванда",e.LatteCaramel="Латте Карамель",e.LatteOrange="Латте Апельсин",e.Cacao="Какао",e.TeaGreen="Чай Зелёный",e.TeaBlack="Чай Чёрный",e.TeaHerbal="Чай Травяной",e.SpeacialTeaPearLime="Чай Груша-Лайм",e.SpecialTeaOrange="Чай Апельсин-Облепиха",e.SpecialTeaGinger="Чай Малина-Имбирь",e.HotChocolate="Гарячий шоколад",e.LemonadeStrawberry="Лимонад Клубника",e.LemonadeCitrus="Лимонад Цитрус",e.LemonadePassion="Лимонад Маракуйя",e.IceLatte="Айс Латте",e.Syrop="Сироп"}(l||(l={})),function(e){e.CoffeeIs="Coffee is",e.FirstPoint="First Point",e.CubaCoffee="Cuba Coffee",e.Progress="Progress",e.KlassnaKava="Класна кава",e.CoffeeAndTheCity="Coffee and the city",e.IlMio="Il Mio",e.StudioCoffee="Студия кофе"}(u||(u={})),function(e){e.INPUT_VALUE_OPTION_UNSPECIFIED="INPUT_VALUE_OPTION_UNSPECIFIED",e.RAW="RAW",e.USER_ENTERED="USER_ENTERED"}(p||(p={})),function(e){e.OVERWRITE="OVERWRITE",e.INSERT_ROWS="INSERT_ROWS"}(d||(d={})),function(e){e.FORMATTED_VALUE="FORMATTED_VALUE",e.UNFORMATTED_VALUE="UNFORMATTED_VALUE",e.FORMULA="FORMULA"}(h||(h={})),function(e){e.SERIAL_NUMBER="SERIAL_NUMBER",e.FORMATTED_STRING="FORMATTED_STRING"}(m||(m={}));var S,w={hasErrored:!1,isLoading:!1,items:[],check:null,history:new Array,log:"",errorMessage:"",lastId:0,notificationType:0},T=Object(D.a)((S={},b()(S,"CREATE_CHECK",function(e,t){var n={id:e.lastId+1,desserts:new Array,drinks:new Array,isFinished:!1,payment:a.Cash,type:r.Shop};return Object.assign({},e,{check:n})}),b()(S,"ADD_DRINK",function(e,t){var n=e.check,a={id:t.payload[0],size:t.payload[1]};return n.drinks.push(a),Object.assign({},e,{check:n})}),b()(S,"DELETE_DRINK",function(e,t){var n=e.check,a=Object.assign({},n);return a.drinks=n.drinks.filter(function(e){return function(e){var n=e.id,a=e.size;return n!==t.payload[0]||a!==t.payload[1]}(e)}),Object.assign({},e,{check:a})}),b()(S,"ADD_DESSERT",function(e,t){var n=e.check,a=n.desserts.find(function(e){return e.type===t.payload[0]&&e.taste===t.payload[1]&&e.size===t.payload[2]});if(a)a.quantity+=t.payload[3];else{var r={type:t.payload[0],taste:t.payload[1],size:t.payload[2],quantity:t.payload[3]};n.desserts.push(r)}return Object.assign({},e,{check:n})}),b()(S,"DELETE_DESSERT",function(e,t){var n=e.check,a=Object.assign({},n);return a.desserts=a.desserts.filter(function(e){return function(e){var n=e.type,a=e.taste,r=e.size;return n!==t.payload[0]||a!==t.payload[1]||!!t.payload[3]&&r!==t.payload[3]}(e)}),Object.assign({},e,{check:a})}),b()(S,"PROCESS_CHECKOUT",function(e,t){var n=e.check,a=e.history,r=e.lastId;return n.isFinished=!0,a.push(n),Object.assign({},e,{check:null,history:[].concat(O()(a)),lastId:r+1})}),b()(S,"SET_PAYMENT_TYPE",function(e,t){var n=e.check;return n.payment=t.payload,Object.assign({},e,{check:Object.assign({},n)})}),b()(S,"SET_ORDER_TYPE",function(e,t){var n=e.check;return n.type=t.payload,Object.assign({},e,{check:Object.assign({},n)})}),b()(S,"LOAD_ITEMS",function(e,t){return Object.assign({},e,{isLoading:t.payload})}),b()(S,"LOAD_ITEMS_FULFILLED",function(e,t){return Object.assign({},e,{items:t.payload})}),b()(S,"LOAD_ITEMS_REJECTED",function(e,t){return Object.assign({},e,{hasErrored:t.payload})}),b()(S,"APPEND_DATA_FULFILLED",function(e,t){return Object.assign({},e,{items:[],hasErrored:!t.payload})}),b()(S,"APPEND_DATA_REJECTED",function(e,t){return Object.assign({},e,{hasErrored:!0,errorMessage:t.payload})}),b()(S,"SHOW_BUSY",function(e,t){var n=t.payload;return Object.assign({},e,{isBusy:n})}),b()(S,"LOG_DATA",function(e,t){var n=t.payload,a=e.log;return Object.assign({},e,{log:a+";"+n})}),b()(S,"CLEAR_LOG",function(e,t){return Object.assign({},e,{log:""})}),b()(S,"CLEAR_ERROR",function(e,t){return Object.assign({},e,{errorMessage:""})}),b()(S,"CANCEL",function(e,t){return Object.assign({},e,{check:null})}),b()(S,"SET_LAST_ID",function(e,t){return Object.assign({},e,{history:[t.payload[1]],lastId:t.payload[0]})}),b()(S,"SHOW_NOTIFICATION",function(e,t){return Object.assign({},e,{errorMessage:t.payload[1],notificationType:t.payload[0]})}),S),w);n(453);var _,A=n(486),I=n(9),x=n.n(I),N=n(18),P=n.n(N),L=n(5),j=n.n(L),R=n(8),M=n.n(R),F=n(484),z=n(488),U=n(489),B=n(12),W=n.n(B),Q=n(483),H=["https://sheets.googleapis.com/$discovery/rest?version=v4"],V="https://www.googleapis.com/auth/spreadsheets",Y="842417198767-7k42pt9ecgtu5f7oopng1oqu3a79i5i9.apps.googleusercontent.com",G="AIzaSyAlI5i8OOtw8aEEMS48E9pouEptq8tEg2M",q="1ObMh87dNmizXbdWkH9TiqfrCfApk_rqxPGuQ_zNgJIM",K="1UBuEwqUyBIvvY1ihmEp9hb1j8m4JCpTl-a8mJ6RjUVw",J=n(114),$=function(e,t,n,a){return new(n||(n=Promise))(function(r,i){function o(e){try{c(a.next(e))}catch(e){i(e)}}function s(e){try{c(a.throw(e))}catch(e){i(e)}}function c(e){e.done?r(e.value):new n(function(t){t(e.value)}).then(o,s)}c((a=a.apply(e,t||[])).next())})},Z=function(e){return function(t){return $(void 0,void 0,void 0,W.a.mark(function n(){var i,o,s,c,l,u,p,d;return W.a.wrap(function(n){for(;;)switch(n.prev=n.next){case 0:return t(ue(!0)),n.prev=1,n.next=4,window.gapi.client.sheets.spreadsheets.values.get({spreadsheetId:e,range:"RawDessertsData!A:H"});case 4:return i=n.sent,n.next=7,window.gapi.client.sheets.spreadsheets.values.get({spreadsheetId:e,range:"RawDrinksData!A:F"});case 7:o=n.sent,s=Math.max.apply(Math,O()(i.result.values.slice(1).map(function(e){return e[7]?Number(e[7]):0}))),c=Math.max.apply(Math,O()(o.result.values.slice(1).map(function(e){return e[5]?Number(e[5]):0}))),l=Math.max(s,c),u={id:l,desserts:[],drinks:[],isFinished:!0,payment:a.Other,type:r.Other},p=null,d=null,u.desserts=i.result.values.slice(1).filter(function(e){return e[7]===l.toString()}).map(function(e){return p="Наличка"===e[4]?a.Cash:a.Card,d="Витрина"===e[5]?r.Shop:r.PreOrder,{type:e[0],taste:e[1],quantity:e[2],size:e[3]}}),u.drinks=o.result.values.slice(1).filter(function(e){return e[5]===l.toString()}).map(function(e){return p="Наличка"===e[2]?a.Cash:a.Card,d="Витрина"===e[3]?r.Shop:r.PreOrder,{id:e[0],size:e[1]}}),u.payment=p,u.type=d,t(ye(l,u)),n.next=26;break;case 21:throw n.prev=21,n.t0=n.catch(1),t(le(!0)),console.log(n.t0),Error(n.t0);case 26:return n.prev=26,t(ue(!1)),n.finish(26);case 29:case"end":return n.stop()}},n,this,[[1,21,26,29]])}))}},X=function(e,t,n){return function(a){return $(void 0,void 0,void 0,W.a.mark(function r(){return W.a.wrap(function(r){for(;;)switch(r.prev=r.next){case 0:return a(ue(!0)),r.prev=1,r.next=4,window.gapi.client.sheets.spreadsheets.values.append({spreadsheetId:e,range:t,valueInputOption:p.USER_ENTERED,insertDataOption:d.OVERWRITE,includeValuesInResponse:!0,responseValueRenderOption:h.FORMATTED_VALUE},{values:n});case 4:r.sent,a(de(!0)),r.next=13;break;case 8:throw r.prev=8,r.t0=r.catch(1),a(he("Ошибка. Проверьте, что вы вошли в систему.")),console.log(r.t0),Error(r.t0);case 13:return r.prev=13,a(ue(!1)),r.finish(13);case 16:case"end":return r.stop()}},r,this,[[1,8,13,16]])}))}},ee=function(e){return $(void 0,void 0,void 0,W.a.mark(function t(){var n,a;return W.a.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.prev=0,n=new Date,a=[[e,n.toUTCString()]],t.next=5,window.gapi.client.sheets.spreadsheets.values.append({spreadsheetId:"1NPYoV9Ys52zf9V_NklQ5JdXhjppBLe0dC9T433ZY7P8",range:"A:B",valueInputOption:p.USER_ENTERED,insertDataOption:d.OVERWRITE,includeValuesInResponse:!0,responseValueRenderOption:h.FORMATTED_VALUE},{values:a});case 5:t.next=11;break;case 7:throw t.prev=7,t.t0=t.catch(0),console.log(t.t0),Error(t.t0);case 11:case"end":return t.stop()}},t,this,[[0,7]])}))},te=Object(Q.a)("CREATE_CHECK"),ne=Object(Q.a)("PROCESS_CHECKOUT"),ae=Object(Q.a)("ADD_DRINK",function(e,t){return[e,t]}),re=Object(Q.a)("ADD_DESSERT",function(e,t,n,a){return[e,t,n,a]}),ie=Object(Q.a)("DELETE_DRINK",function(e,t){return[e,t]}),oe=Object(Q.a)("DELETE_DESSERT",function(e,t,n){return[e,t,n]}),se=Object(Q.a)("SET_PAYMENT_TYPE",function(e){return e}),ce=Object(Q.a)("SET_ORDER_TYPE",function(e){return e}),le=Object(Q.a)("LOAD_ITEMS_REJECTED",function(e){return e}),ue=Object(Q.a)("LOAD_ITEMS",function(e){return e}),pe=Object(Q.a)("LOAD_ITEMS_FULFILLED",function(e){return e}),de=Object(Q.a)("APPEND_DATA_FULFILLED",function(e){return e}),he=Object(Q.a)("APPEND_DATA_REJECTED",function(e){return e}),me=(Object(Q.a)("SHOW_BUSY",function(e){return e}),Object(Q.a)("LOG_DATA",function(e){return e})),fe=Object(Q.a)("CLEAR_LOG"),ge=Object(Q.a)("CANCEL"),Ee=Object(Q.a)("CLEAR_ERROR"),ye=Object(Q.a)("SET_LAST_ID",function(e,t){return[e,t]}),ve=Object(Q.a)("SHOW_NOTIFICATION",function(e,t){return[e,t]}),ke=n(209),be=n(70),Ce=n.n(be),Oe=n(20),De=n.n(Oe),Se=Object(ke.withStyles)(e=>({root:{display:"flex",flexWrap:"wrap",width:"100%",height:"25vh"},image:{position:"relative",width:"100%",[e.breakpoints.down("xs")]:{width:"100% !important"},"&:hover, &$focusVisible":{zIndex:1,"& $imageBackdrop":{opacity:.15},"& $imageMarked":{opacity:0},"& $imageTitle":{border:"4px solid currentColor"}}},focusVisible:{},imageButton:{position:"absolute",left:0,right:0,top:0,bottom:0,display:"flex",alignItems:"center",justifyContent:"center",color:e.palette.common.white},imageSrc:{position:"absolute",left:0,right:0,top:0,bottom:0,backgroundSize:"cover",backgroundPosition:"center 40%"},imageBackdrop:{position:"absolute",left:0,right:0,top:0,bottom:0,backgroundColor:e.palette.common.black,opacity:.4,transition:e.transitions.create("opacity")},imageTitle:{position:"relative",padding:`${2*e.spacing.unit}px ${4*e.spacing.unit}px ${e.spacing.unit+6}px`},imageMarked:{height:3,width:18,backgroundColor:e.palette.common.white,position:"absolute",bottom:-2,left:"calc(50% - 9px)",transition:e.transitions.create("opacity")}}))(function(e){var t=e.classes,n=e.component,a=e.onClick,r=e.title,i=e.imageUrl;return f.createElement("div",{className:t.root,onClick:a},f.createElement(Ce.a,{focusRipple:!0,key:"main",className:t.image,component:n,focusVisibleClassName:t.focusVisible,style:{width:"30"}},f.createElement("span",{className:t.imageSrc,style:{backgroundImage:"url("+i+")"}}),f.createElement("span",{className:t.imageBackdrop}),f.createElement("span",{className:t.imageButton},f.createElement(De.a,{component:"span",variant:"subheading",color:"inherit",className:t.imageTitle},r,f.createElement("span",{className:t.imageMarked})))))}),we=n(34),Te=n.n(we),_e=n(31),Ae=n.n(_e),Ie=n(208),xe=n.n(Ie),Ne=n(207),Pe=n.n(Ne),Le=n(205),je=n.n(Le),Re=n(206),Me=n.n(Re),Fe=n(35),ze=n.n(Fe),Ue=function(e){function t(){return x()(this,t),j()(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return M()(t,e),P()(t,[{key:"render",value:function(){var e=this.props.history;return f.createElement(Te.a,{component:"nav"},e.sort(function(e,t){return e.id>t.id?-1:t.id>e.id?1:0}).map(function(e){return f.createElement(Ae.a,{key:e.id},f.createElement(xe.a,{className:"historyContainer"},f.createElement(Pe.a,{expandIcon:f.createElement(Me.a,null)},f.createElement(De.a,null,"Чек #"+e.id)),f.createElement(je.a,{style:{flexDirection:"column"}},f.createElement(De.a,{variant:"subheading"},f.createElement("b",null,"Десерты")),f.createElement("div",{className:"historyItemRow"},e.desserts.map(function(e,t){return f.createElement(De.a,{key:t,variant:"subheading"},e.type+" "+e.taste+": "+(e.quantity?e.quantity:e.size))})),f.createElement(ze.a,null),f.createElement(De.a,{variant:"subheading"},f.createElement("b",null,"Напитки")),f.createElement("div",{className:"historyItemRow"},e.drinks.map(function(e,t){return f.createElement(De.a,{key:t,variant:"subheading"},e.id+": "+e.size)})),f.createElement(ze.a,null),f.createElement("div",{className:"historyItemRow"},f.createElement(De.a,{variant:"subheading"},f.createElement("b",null,"Тип оплаты: "),e.payment)),f.createElement("div",{className:"historyItemRow"},f.createElement(De.a,{variant:"subheading"},f.createElement("b",null,"Тип заказа: "),e.type)))))}))}}]),t}(f.Component),Be=Object(E.b)(function(e){return{history:e.history}},function(e){return{}})(Ue),We=n(204),Qe=n.n(We),He=n(202),Ve=n.n(He),Ye=n(201),Ge=n.n(Ye),qe=n(199),Ke=n.n(qe),Je=n(37),$e=n.n(Je),Ze=n(200),Xe=n.n(Ze),et=n(144),tt=n.n(et),nt=n(203),at=n.n(nt),rt=n(6),it=n.n(rt);n(341);!function(e){e[e.success=0]="success",e[e.warning=1]="warning",e[e.error=2]="error",e[e.info=3]="info"}(_||(_={}));var ot=function(e){function t(){x()(this,t);var e=j()(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments));return e.handleClose=function(){e.props.clearError()},e}return M()(t,e),P()(t,[{key:"getIcon",value:function(){var e=null;switch(this.props.type){case _.success:e=Qe.a;break;case _.warning:e=at.a;break;case _.error:e=Ve.a;break;case _.info:default:e=Ge.a}return e}},{key:"getClass",value:function(){var e=null;switch(this.props.type){case _.success:e="success";break;case _.warning:e="warning";break;case _.error:e="error";break;case _.info:default:e="info"}return e}},{key:"render",value:function(){var e=this.props.message,t=this.getIcon();return f.createElement(Xe.a,{anchorOrigin:{vertical:"bottom",horizontal:"center"},open:!!e,autoHideDuration:6e3,onClose:this.handleClose},f.createElement(tt.a,{className:this.getClass(),"aria-describedby":"client-snackbar",message:f.createElement("span",{id:"client-snackbar",className:"message"},f.createElement(t,{className:it()("icon","icon-variant")}),e),action:f.createElement($e.a,{key:"close","aria-label":"Close",color:"inherit",className:"notificationClose",onClick:this.handleClose},f.createElement(Ke.a,null))}))}}]),t}(f.Component),st=Object(E.b)(function(e){return{message:e.errorMessage,type:e.notificationType}},function(e){return{clearError:function(){return e(Ee())}}})(ot),ct=n(198),lt=function(e){return f.createElement("div",{className:"busy-container"+(e.loading?"":" invisible")},f.createElement("div",{className:"busy"},f.createElement(ct.GridLoader,{color:"#d0006f",loading:e.loading})))},ut=n(42),pt=n.n(ut),dt=n(41),ht=n.n(dt),mt=n(307),ft=n(306),gt=function(e){return f.createElement(U.a,Object.assign({to:"/check"},e))},Et=function(e){return f.createElement(U.a,Object.assign({to:"/partners"},e))},yt=function(e){function t(){x()(this,t);var e=j()(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments));return e.onNewCheckClick=function(){e.props.createCheck(),e.props.logData("mainPage->newCheck")},e.onNewPartnersCheckClick=function(){e.props.createCheck(),e.props.logData("mainPage->onNewPartnersCheckClick")},e}return M()(t,e),P()(t,[{key:"componentDidMount",value:function(){var e=this.props.history;e&&e.length||this.props.fetchData(K)}},{key:"render",value:function(){var e=this.props.isLoading;return f.createElement("div",{className:"container"},f.createElement(pt.a,{className:"cardContainer",raised:!0},f.createElement(ht.a,{classes:{root:"cardRoot"}},f.createElement(Se,{title:"РОЗНИЧНЫЙ ЗАКАЗ",component:gt,imageUrl:mt,onClick:this.onNewCheckClick}))),f.createElement(pt.a,{className:"cardContainer",raised:!0},f.createElement(ht.a,{classes:{root:"cardRoot"}},f.createElement(Se,{title:"ОПТОВЫЙ ЗАКАЗ",component:Et,imageUrl:ft,onClick:this.onNewPartnersCheckClick}))),f.createElement(pt.a,{className:"cardContainerHistory",raised:!0},f.createElement(ht.a,null,f.createElement(De.a,{gutterBottom:!0,variant:"headline",component:"h2"},"История"),f.createElement(Be,null))),f.createElement(st,null),f.createElement(lt,{loading:e}))}}]),t}(f.Component),vt=Object(E.b)(function(e){return{history:e.history,isLoading:e.isLoading}},function(e){return{createCheck:function(){return e(te())},logData:function(t){return e(me(t))},fetchData:function(t){return e(Z(t))}}})(yt),kt=n(25),bt=n.n(kt),Ct=n(54),Ot=n.n(Ct),Dt=n(38),St=n.n(Dt),wt=n(108),Tt=n.n(wt),_t=n(109),At=n.n(_t),It={};It[l.Cappucino]=["175 мл","340 мл"],It[l.Latte]=["250 мл","340 мл"],It[l.FlatWhite]=["175 мл"],It[l.Raf]=["250 мл","340 мл"],It[l.Americano]=["120 мл"],It[l.AmericanoMilk]=["120 мл"],It[l.LongBlack]=["200 мл"],It[l.Espresso]=["30 мл"],It[l.Doppio]=["60 мл"],It[l.Machiato]=["90 мл"],It[l.LatteLavender]=["250 мл","340 мл"],It[l.LatteCaramel]=["250 мл","340 мл"],It[l.LatteOrange]=["250 мл","340 мл"],It[l.Cacao]=["250 мл","340 мл"],It[l.TeaGreen]=["400 мл"],It[l.TeaBlack]=["400 мл"],It[l.TeaHerbal]=["400 мл"],It[l.SpeacialTeaPearLime]=["400 мл"],It[l.SpecialTeaOrange]=["400 мл"],It[l.SpecialTeaGinger]=["400 мл"],It[l.HotChocolate]=["175 мл"],It[l.LemonadeStrawberry]=["400 мл"],It[l.LemonadeCitrus]=["400 мл"],It[l.LemonadePassion]=["400 мл"],It[l.IceLatte]=["400 мл"],It[l.Syrop]=["0 мл"];var xt={};xt[i.Macaron]=[1,6,12,24],xt[i.Zephyr]=[1,8,16],xt[i.Cake]=["18 см","22 см"];var Nt={};Nt[l.Cappucino]=[25,40],Nt[l.Latte]=[28,35],Nt[l.FlatWhite]=[35],Nt[l.Raf]=[38,45],Nt[l.Americano]=[20],Nt[l.AmericanoMilk]=[25],Nt[l.LongBlack]=[30],Nt[l.Espresso]=[20],Nt[l.Doppio]=[30],Nt[l.Machiato]=[22],Nt[l.LatteLavender]=[32,40],Nt[l.LatteCaramel]=[32,40],Nt[l.LatteOrange]=[32,40],Nt[l.Cacao]=[28,35],Nt[l.TeaGreen]=[25],Nt[l.TeaBlack]=[25],Nt[l.TeaHerbal]=[25],Nt[l.SpeacialTeaPearLime]=[35],Nt[l.SpecialTeaOrange]=[35],Nt[l.SpecialTeaGinger]=[35],Nt[l.HotChocolate]=[55],Nt[l.LemonadeStrawberry]=[35],Nt[l.LemonadeCitrus]=[35],Nt[l.LemonadePassion]=[35],Nt[l.IceLatte]=[40],Nt[l.Syrop]=[5];var Pt={};Pt[u.CoffeeIs]=17,Pt[u.FirstPoint]=19,Pt[u.CubaCoffee]=19,Pt[u.Progress]=20,Pt[u.KlassnaKava]=19,Pt[u.CoffeeAndTheCity]=19,Pt[u.IlMio]=19,Pt[u.StudioCoffee]=20;var Lt={};Lt[c.CarrotCake]=[650,980],Lt[c.Pink]=[630,970],Lt[c.Infinity]=[640,970],Lt[c.Rio]=[630,970],Lt[c.Soul]=[620,960];var jt={};jt[o.DorBluePear]="#b7e4f7",jt[o.ParmesanFigue]="#fcf7e8",jt[o.StrawberryCheesecake]="#ffdddd",jt[o.Raspberry]="#ffa5cf",jt[o.Currant]="#bc45c6",jt[o.LavenderBlackberry]="#b587ff",jt[o.MangoPassion]="#ffdd87",jt[o.CoffeeCaramel]="#a87301",jt[o.Chocolate]="#492908",jt[o.Pistachio]="#85dd93",jt[o.LimeBasil]="#9ff25c";var Rt={};Rt[s.Apple]="#fffbf2",Rt[s.ApricotPassionFruit]="#ffe6bf",Rt[s.Currant]="#d978еd",Rt[s.StrawberryCranberry]="#f497b9";var Mt=n(53),Ft=n.n(Mt),zt=function(e,t,n,a){return new(n||(n=Promise))(function(r,i){function o(e){try{c(a.next(e))}catch(e){i(e)}}function s(e){try{c(a.throw(e))}catch(e){i(e)}}function c(e){e.done?r(e.value):new n(function(t){t(e.value)}).then(o,s)}c((a=a.apply(e,t||[])).next())})},Ut=function(e){function t(e){x()(this,t);var n=j()(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.handleClose=function(){n.props.handleClose(),n.props.logData("drinks->close")},n.handleDrinkSelect=function(e){return zt(n,void 0,void 0,W.a.mark(function t(){var n;return W.a.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:if(!(n=It[e])||1!==n.length){t.next=9;break}return this.setState({drinkType:e,drinkSize:n[0]}),t.next=5,this.props.addDrink(e,n[0]);case 5:this.props.handleClose(),this.props.logData("drinks->drinkSelected->"+e+"->drinkSizeSelected->"+n[0]),t.next=11;break;case 9:this.setState({drinkType:e}),this.props.logData("drinks->drinkSelected->"+e);case 11:case"end":return t.stop()}},t,this)}))},n.handleDrinkSizeSelect=function(e){return zt(n,void 0,void 0,W.a.mark(function t(){var n;return W.a.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return this.setState({drinkSize:e}),n=this.state.drinkType,t.next=4,this.props.addDrink(n,e);case 4:this.props.handleClose(),this.props.logData("drinks->drinkSizeSelected->"+e);case 6:case"end":return t.stop()}},t,this)}))},n.state={drinkType:null,drinkSize:null},n}return M()(t,e),P()(t,[{key:"renderDrinks",value:function(){var e=this,t=Object.keys(l).map(function(e){return{id:e,value:l[e]}});return f.createElement("div",null,f.createElement(Te.a,null,t.map(function(t){return f.createElement(Ae.a,{button:!0,onClick:function(){return e.handleDrinkSelect(t.value)},key:t.id},f.createElement(Ot.a,null,f.createElement(Ft.a,{className:"drinkAvatar"},t.value.charAt(0).toUpperCase())),f.createElement(St.a,{primary:t.value}))}),f.createElement("div",{className:"buttonApplyWraper"},f.createElement(bt.a,{variant:"contained",color:"secondary",onClick:this.handleClose},"Отмена"))))}},{key:"renderDrinkSizes",value:function(){var e=this,t=this.state.drinkType,n=It[t];return f.createElement("div",null,f.createElement(Te.a,null,n.map(function(t){return f.createElement(Ae.a,{button:!0,onClick:function(){return e.handleDrinkSizeSelect(t)},key:t},f.createElement(Ot.a,null,f.createElement(Ft.a,{className:"drinkAvatar"},t.charAt(0).toUpperCase())),f.createElement(St.a,{primary:t}))}),f.createElement("div",{className:"buttonApplyWraper"},f.createElement(bt.a,{variant:"contained",color:"secondary",onClick:this.handleClose},"Отмена"))))}},{key:"render",value:function(){var e=this.state.drinkType;return f.createElement(At.a,{onClose:this.handleClose,"aria-labelledby":"simple-dialog-title",open:!0,fullScreen:!0},f.createElement(Tt.a,{id:"simple-dialog-title"},e?"Выберите размер":"Выберите напиток"),e?this.renderDrinkSizes():this.renderDrinks())}}]),t}(f.Component),Bt=Object(E.b)(function(e){return{}},function(e){return{addDrink:function(t,n){return e(ae(t,n))},logData:function(t){return e(me(t))}}})(Ut),Wt=n(146),Qt=n(82),Ht=n.n(Qt),Vt=function(e,t,n,a){return new(n||(n=Promise))(function(r,i){function o(e){try{c(a.next(e))}catch(e){i(e)}}function s(e){try{c(a.throw(e))}catch(e){i(e)}}function c(e){e.done?r(e.value):new n(function(t){t(e.value)}).then(o,s)}c((a=a.apply(e,t||[])).next())})},Yt="Набор",Gt=function(e){function t(e){x()(this,t);var n=j()(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.handleClose=function(){n.props.handleClose(),n.props.logData("desserts->close")},n.handleDessertSelect=function(e){n.setState({dessertType:e}),n.props.logData("desserts->dessertSelected->"+e)},n.handleDessertTasteSelect=function(e){return Vt(n,void 0,void 0,W.a.mark(function t(){return W.a.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:this.state.dessertType===i.Cake?(this.setState({dessertTaste:e}),this.props.logData("desserts->dessertTasteSelected->"+e)):this.handleDessertIncrease(e);case 2:case"end":return t.stop()}},t,this)}))},n.handleDessertMixSelect=function(e){return Vt(n,void 0,void 0,W.a.mark(function t(){return W.a.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:this.handleDessertIncrease(Yt,e),this.props.logData("desserts->handleDessertMixSelect->"+e);case 2:case"end":return t.stop()}},t,this)}))},n.handleDessertSizeOrQuantitySelect=function(e){return Vt(n,void 0,void 0,W.a.mark(function t(){var n,a,r;return W.a.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:if(n=this.state,a=n.dessertType,r=n.dessertTaste,a!==i.Cake){t.next=8;break}return t.next=4,this.props.addDessert(a,r,e,1);case 4:this.props.handleClose(),this.props.logData("desserts->dessertSizeSelected->"+e),t.next=12;break;case 8:return t.next=10,this.props.addDessert(a,r,null,e);case 10:this.props.handleClose(),this.props.logData("desserts->dessertQuantitySelected->"+e);case 12:case"end":return t.stop()}},t,this)}))},n.handleFinish=function(){return Vt(n,void 0,void 0,W.a.mark(function e(){var t,n,a,r,i,o;return W.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:t=this.state,n=t.dessertType,a=t.dessertQuantities,e.t0=W.a.keys(a);case 2:if((e.t1=e.t0()).done){e.next=10;break}return r=e.t1.value,i=r.split("/")[1],o=a[r],e.next=8,this.props.addDessert(n,i,null,o||0);case 8:e.next=2;break;case 10:this.props.handleClose(),this.props.logData("desserts->handleFinish");case 12:case"end":return e.stop()}},e,this)}))},n.handleDessertIncrease=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,a=n.state,r=a.dessertQuantities,i=a.dessertType,o=n.getId(i,e);r[o]?r[o]+=t:r[o]=t,n.setState({dessertQuantities:r}),n.props.logData("desserts->dessertQtyIncrease->"+o)},n.state={dessertType:null,dessertTaste:null,dessertQuantities:{}},n}return M()(t,e),P()(t,[{key:"getId",value:function(e,t){return e+"/"+t}},{key:"countTotalDessertQuantity",value:function(){var e=this.state,t=e.dessertQuantities,n=e.dessertType,a=0;for(var r in t)r.startsWith(n)&&(a+=t[r]);return a}},{key:"getArrayFromEnum",value:function(e){return Object.keys(e).map(function(t){return{id:t,value:e[t]}})}},{key:"renderDesserts",value:function(){var e=this,t=Object.keys(i).map(function(e){return{id:e,value:i[e]}});return f.createElement("div",null,f.createElement(Te.a,null,t.map(function(t){return f.createElement(Ae.a,{button:!0,onClick:function(){return e.handleDessertSelect(t.value)},key:t.id},f.createElement(Ot.a,null,f.createElement(Ft.a,{className:"macaronAvatar",style:{backgroundColor:"#dd73e2"}},t.value.charAt(0).toUpperCase())),f.createElement(St.a,{primary:t.value}))}),f.createElement("div",{className:"buttonApplyWraper"},f.createElement(bt.a,{variant:"contained",color:"secondary",onClick:this.handleClose},"Отмена"))))}},{key:"renderDessertTastes",value:function(){var e=this,t=this.state,n=t.dessertType,a=t.dessertQuantities,r=void 0,l=[];switch(n){case i.Cake:r=this.getArrayFromEnum(c);break;case i.Macaron:r=this.getArrayFromEnum(o),l.push({value:6,title:"Набор на 6 шт."}),l.push({value:12,title:"Набор на 12 шт."}),l.push({value:24,title:"Набор на 24 шт."});break;case i.Zephyr:r=this.getArrayFromEnum(s),l.push({value:8,title:"Набор на 8 шт."}),l.push({value:16,title:"Набор на 16 шт."});break;default:r=[]}return f.createElement("div",null,n!==i.Cake&&f.createElement("div",{className:"buttonApplyWraper"},f.createElement(bt.a,{variant:"contained",color:"primary",title:"Check Out",onClick:this.handleFinish},"Применить")),f.createElement(Te.a,null,r.map(function(t){return f.createElement(Ae.a,{button:!0,onClick:function(){return e.handleDessertTasteSelect(t.value)},key:t.id},f.createElement(Ot.a,null,f.createElement(Ft.a,{className:"macaronAvatar",style:{backgroundColor:n===i.Macaron?jt[t.value]:Rt[t.value]}},t.value.charAt(0).toUpperCase())),f.createElement(St.a,{primary:t.value+(n!==i.Cake?"("+(a[e.getId(n,t.value)]||0)+")":"")}),n!==i.Cake&&f.createElement(Ht.a,null,f.createElement($e.a,{"aria-label":"Add",onClick:function(){return e.handleDessertIncrease(t.value)}},f.createElement(Wt.a,null))))}),l.map(function(t){return f.createElement(Ae.a,{button:!0,onClick:function(){return e.handleDessertMixSelect(t.value)},key:t.value},f.createElement(Ot.a,null,f.createElement(Ft.a,{className:"macaronAvatar",style:{backgroundColor:"#dd73e2"}},t.value)),f.createElement(St.a,{primary:t.title+"("+(a[e.getId(n,Yt)]||0)+")"}))}),f.createElement("div",{className:"buttonApplyWraper"},f.createElement(bt.a,{variant:"contained",color:"secondary",onClick:this.handleClose},"Отмена"))))}},{key:"renderDessertSize",value:function(){var e=this,t=this.state.dessertType,n=xt[t];return f.createElement("div",null,f.createElement(Te.a,null,n.map(function(t){return f.createElement(Ae.a,{button:!0,onClick:function(){return e.handleDessertSizeOrQuantitySelect(t)},key:t},f.createElement(Ot.a,null,f.createElement(Ft.a,{className:"avatar"},f.createElement(Wt.a,null))),f.createElement(St.a,{primary:t}))}),f.createElement("div",{className:"buttonApplyWraper"},f.createElement(bt.a,{variant:"contained",color:"secondary",onClick:this.handleClose},"Отмена"))))}},{key:"render",value:function(){var e=this.state,t=e.dessertType,n=e.dessertTaste;return f.createElement(At.a,{onClose:this.handleClose,"aria-labelledby":"simple-dialog-title",open:!0,fullScreen:!0},f.createElement(Tt.a,{id:"simple-dialog-title"},t?n?"Выберите размер":"Выберите вкус ("+this.countTotalDessertQuantity()+")":"Выберите Десерт"),t?n?this.renderDessertSize():this.renderDessertTastes():this.renderDesserts())}}]),t}(f.Component),qt=Object(E.b)(function(e){return{}},function(e){return{addDessert:function(t,n,a,r){return e(re(t,n,a,r))},logData:function(t){return e(me(t))}}})(Gt),Kt=n(485),Jt=n(145),$t=n.n(Jt),Zt=n(277),Xt=n(276),en=function(e){function t(e){x()(this,t);var n=j()(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.addDrinkClick=function(){n.setState({showDrinks:!0})},n.addDessertClick=function(){n.setState({showDesserts:!0})},n.handleNextClick=function(){n.props.history.push("/checkOut")},n.handleDeleteDrink=function(e){n.props.deleteDrink(e.id,e.size)},n.handleDeleteDessert=function(e){n.props.deleteDessert(e.type,e.taste,e.size)},n.state={showDrinks:!1,showDesserts:!1},n}return M()(t,e),P()(t,[{key:"renderCheckContent",value:function(){var e=this,t=this.props.check;return f.createElement(Te.a,{component:"nav"},t.drinks.map(function(t,n){return f.createElement(Ae.a,{button:!0,key:n},f.createElement(St.a,{inset:!0,primary:t.id+" - "+t.size}),f.createElement(Ht.a,null,f.createElement($e.a,{"aria-label":"Delete",onClick:function(){return e.handleDeleteDrink(t)}},f.createElement($t.a,null))))}),t.desserts.map(function(t,n){return f.createElement(Ae.a,{button:!0,key:n},f.createElement(St.a,{inset:!0,primary:t.type+" - "+t.taste+" - "+t.quantity+(t.size?" - "+t.size:"")}),f.createElement(Ht.a,null,f.createElement($e.a,{"aria-label":"Delete",onClick:function(){return e.handleDeleteDessert(t)}},f.createElement($t.a,null))))}))}},{key:"render",value:function(){var e=this,t=this.state,n=t.showDrinks,a=t.showDesserts,r=this.props.check;return r?f.createElement("div",null,f.createElement(De.a,{gutterBottom:!0,variant:"headline",component:"h2"},"Новый заказ"),"Чек #"+r.id,this.renderCheckContent(),f.createElement(ze.a,null),f.createElement("div",{className:"newOrderButtonsWrapper"},f.createElement("div",{className:"newOrderButton"},f.createElement(Se,{title:"ДЕСЕРТЫ",imageUrl:Zt,onClick:this.addDessertClick})),f.createElement("div",{className:"newOrderButton"},f.createElement(Se,{title:"НАПИТКИ",imageUrl:Xt,onClick:this.addDrinkClick}))),f.createElement("div",{className:"buttonsWraper"},f.createElement(bt.a,{disabled:0===r.desserts.length&&0===r.drinks.length,variant:"contained",size:"large",color:"primary",onClick:this.handleNextClick},"Продолжить")),n&&f.createElement(Bt,{handleClose:function(){return e.setState({showDrinks:!1})}}),a&&f.createElement(qt,{handleClose:function(){return e.setState({showDesserts:!1})}})):f.createElement("div",{className:"container"},"Пожалуйста, создайте сначала чек")}}]),t}(f.Component),tn=Object(Kt.a)(Object(E.b)(function(e){return{check:e.check}},function(e){return{deleteDessert:function(t,n,a){return e(oe(t,n,a))},deleteDrink:function(t,n){return e(ie(t,n))}}})(en)),nn=function(e){function t(){return x()(this,t),j()(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return M()(t,e),P()(t,[{key:"render",value:function(){return f.createElement("div",null,f.createElement(pt.a,{className:"cardContainer",raised:!0},f.createElement(ht.a,null,f.createElement(tn,null))))}}]),t}(f.Component),an=Object(E.b)(function(e){return{}},function(e){return{}})(nn),rn=n(85),on=n.n(rn),sn=n(86),cn=n.n(sn),ln=function(e){function t(){x()(this,t);var e=j()(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments));return e.handleCheckout=function(){e.props.handleCheckout(),e.props.history.push("/"),e.props.logData("checkoutPage->checkout")},e.handleCancel=function(){e.props.handleCancel(),e.props.history.push("/"),e.props.logData("checkoutPage->cancel")},e.handleBack=function(){e.props.history.push("/check"),e.props.logData("checkoutPage->back")},e.handlePaymentTypeChange=function(t){e.props.setPaymentType(t),e.props.logData("checkoutPage->paymentTypeChanged->"+t)},e.handleOrderTypeChange=function(t){e.props.setOrderType(t),e.props.logData("checkoutPage->orderTypeChanged->"+t)},e}return M()(t,e),P()(t,[{key:"calculatePrice",value:function(){var e=this.props.check,t=0;return e.desserts.forEach(function(e){switch(e.type){case i.Cake:var n=Lt[e.taste];"18 см"===e.size?t+=n[0]:"22 см"===e.size&&(t+=n[1]);break;case i.Macaron:t+=28*e.quantity;break;case i.Zephyr:t+=11*e.quantity}}),e.drinks.forEach(function(e){var n=Nt[e.id];if(1===n.length)t+=n[0];else{var a=It[e.id].findIndex(function(t){return t===e.size});t+=n[a]}}),t}},{key:"render",value:function(){var e=this,t=this.props.check;return t?f.createElement("div",{className:"container"},f.createElement(pt.a,{className:"cardContainer",raised:!0},f.createElement(ht.a,null,f.createElement(De.a,{gutterBottom:!0,variant:"headline",component:"h2"},"Страница выбора параметров чека"),f.createElement(ze.a,null),f.createElement("div",{className:"checkoutControlGroup"},"Итого: ",this.calculatePrice()," грн."),f.createElement(ze.a,null),f.createElement("div",{className:"checkoutControlGroup"},"Тип платежа:",f.createElement(cn.a,{control:f.createElement(on.a,{checked:t.payment===a.Card,onChange:function(){return e.handlePaymentTypeChange(a.Card)},value:a.Card.toString()}),label:"Карта"}),f.createElement(cn.a,{control:f.createElement(on.a,{checked:t.payment===a.Cash,onChange:function(){return e.handlePaymentTypeChange(a.Cash)},value:a.Cash.toString()}),label:"Наличные"})),f.createElement(ze.a,null),f.createElement("div",{className:"checkoutControlGroup"},"Тип заказа:",f.createElement(cn.a,{control:f.createElement(on.a,{checked:t.type===r.PreOrder,onChange:function(){return e.handleOrderTypeChange(r.PreOrder)},value:r.PreOrder.toString()}),label:"Предзаказ"}),f.createElement(cn.a,{control:f.createElement(on.a,{checked:t.type===r.Shop,onChange:function(){return e.handleOrderTypeChange(r.Shop)},value:r.Shop.toString()}),label:"Витрина"})),f.createElement(ze.a,null),f.createElement("div",{className:"buttonsWraper"},f.createElement(bt.a,{classes:{root:"button"},variant:"contained",color:"primary",title:"Check Out",onClick:this.handleCheckout},"Продолжить"),f.createElement(bt.a,{classes:{root:"button"},variant:"contained",color:"default",title:"Back",onClick:this.handleBack},"Назад"),f.createElement(bt.a,{classes:{root:"button"},variant:"contained",color:"secondary",title:"Cancel",onClick:this.handleCancel},"Отмена"))))):f.createElement("div",{className:"container"},"Пожалуйста, создайте сначала чек")}}]),t}(f.Component),un=Object(Kt.a)(Object(E.b)(function(e){return{check:e.check}},function(e){return{handleCheckout:function(){return e(function(e,t){return $(void 0,void 0,void 0,W.a.mark(function n(){var a,r,i,o,s,c,l,u=this;return W.a.wrap(function(n){for(;;)switch(n.prev=n.next){case 0:if(e(ue(!0)),n.prev=1,a=t(),r=a.check,i=a.log,o="RawDrinksData!A:F",s=[],r.drinks.forEach(function(e){return $(u,void 0,void 0,W.a.mark(function t(){var n,a;return W.a.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:n=J(new Date).format("DD.MM.YYYY HH:mm"),a=[e.id,e.size,r.payment,r.type,n,r.id],s.push(a);case 3:case"end":return t.stop()}},t,this)}))}),!s.length){n.next=11;break}return n.next=11,e(X(K,o,s));case 11:if(c="RawDessertsData!A:H",l=[],r.desserts.forEach(function(e){return $(u,void 0,void 0,W.a.mark(function t(){var n,a;return W.a.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:n=J(new Date).format("DD.MM.YYYY HH:mm"),a=[e.type,e.taste,e.quantity,e.size,r.payment,r.type,n,r.id],l.push(a);case 3:case"end":return t.stop()}},t,this)}))}),!l.length){n.next=17;break}return n.next=17,e(X(K,c,l));case 17:return e(ne()),n.next=20,e(ve(0,"Заказ сохранён!"));case 20:return n.next=22,ee(i);case 22:return n.next=24,ee(JSON.stringify(r));case 24:e(fe()),n.next=32;break;case 27:throw n.prev=27,n.t0=n.catch(1),e(he("Ошибка. Проверьте, что вы вошли в систему.")),console.log(n.t0),Error(n.t0);case 32:return n.prev=32,e(ue(!1)),n.finish(32);case 35:case"end":return n.stop()}},n,this,[[1,27,32,35]])}))})},setPaymentType:function(t){return e(se(t))},setOrderType:function(t){return e(ce(t))},logData:function(t){return e(me(t))},handleCancel:function(){return e(ge())}}})(ln)),pn=n(195),dn=n.n(pn),hn=function(e){function t(){return x()(this,t),j()(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return M()(t,e),P()(t,[{key:"render",value:function(){return dn()(this.props),f.createElement("div",{className:"container"},"Not Found")}}]),t}(f.Component),mn=Object(E.b)(function(e){return{}},function(e){return{}})(hn),fn=n(142),gn=n.n(fn),En=n(143),yn=n.n(En),vn=n(141),kn=n.n(vn),bn=n(81),Cn=n.n(bn),On=n(112),Dn=n.n(On),Sn=function(e){function t(e){x()(this,t);var n=j()(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.handlePartnerSelect=function(e){var t=e.target.value;n.setState({partner:t})},n.handleMacaronsQtyChange=function(e){n.setState({macaronsQty:e.target.value})},n.handleZephyrQtyChange=function(e){n.setState({zephyrQty:e.target.value})},n.handleNextClick=function(){var e=n.props,t=e.processPartnersOrderSubmit,a=e.history,r=n.state;t(r.partner,r.macaronsQty,r.zephyrQty),a.push("/")},n.state={partner:"",macaronsQty:0,zephyrQty:0},n}return M()(t,e),P()(t,[{key:"getArrayFromEnum",value:function(e){return Object.keys(e).map(function(t){return{id:t,value:e[t]}})}},{key:"calculateTotalPrice",value:function(){var e=this.state,t=e.partner,n=e.macaronsQty,a=e.zephyrQty,r=0;return t?(r+=n*Pt[t],r+=11*a):r}},{key:"render",value:function(){var e=this.state,t=e.partner,n=e.macaronsQty,a=e.zephyrQty,r=this.getArrayFromEnum(u);return f.createElement("div",null,f.createElement(De.a,{gutterBottom:!0,variant:"headline",component:"h2"},"Оптовый заказ"),f.createElement(yn.a,{className:"partnerSelectWrapper"},f.createElement(gn.a,{htmlFor:"partner-select"},"Кофейня"),f.createElement(kn.a,{value:t,onChange:this.handlePartnerSelect,inputProps:{name:"partner",id:"partner-select"}},f.createElement(Cn.a,{value:""},f.createElement("em",null,"None")),r.map(function(e){return f.createElement(Cn.a,{key:e.id,value:e.value},e.value)}))),f.createElement(Dn.a,{label:"Макароны",value:n,onChange:this.handleMacaronsQtyChange,type:"number",InputLabelProps:{shrink:!0},margin:"normal",fullWidth:!0,disabled:!t,placeholder:"Введите количество макаронс"}),f.createElement(Dn.a,{label:"Зефир",value:a,onChange:this.handleZephyrQtyChange,type:"number",InputLabelProps:{shrink:!0},margin:"normal",fullWidth:!0,disabled:!t,placeholder:"Введите количество зефира"}),f.createElement(ze.a,null),f.createElement(Dn.a,{label:"Итого",value:this.calculateTotalPrice()+" грн.",InputLabelProps:{shrink:!0},margin:"normal",fullWidth:!0}),f.createElement("div",{className:"buttonsWraper"},f.createElement(bt.a,{disabled:!t,variant:"contained",size:"large",color:"primary",onClick:this.handleNextClick},"Готово")))}}]),t}(f.Component),wn=Object(Kt.a)(Object(E.b)(function(e){return{}},function(e){return{processPartnersOrderSubmit:function(t,n,a){return e(function(e,t,n){return function(a){return $(void 0,void 0,void 0,W.a.mark(function r(){var i,o;return W.a.wrap(function(r){for(;;)switch(r.prev=r.next){case 0:return a(ue(!0)),r.prev=1,i="RawPartnersData!A:D",o=[[e,t,n,J(new Date).format("DD.MM.YYYY HH:mm")]],r.next=6,a(X(K,i,o));case 6:return r.next=8,ee(JSON.stringify(o));case 8:return r.next=10,a(ve(0,"Заказ сохранён!"));case 10:r.next=17;break;case 12:throw r.prev=12,r.t0=r.catch(1),a(he("Ошибка. Проверьте, что вы вошли в систему.")),console.log(r.t0),Error(r.t0);case 17:return r.prev=17,a(ue(!1)),r.finish(17);case 20:case"end":return r.stop()}},r,this,[[1,12,17,20]])}))}}(t,n,a))}}})(Sn)),Tn=function(e){function t(){return x()(this,t),j()(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return M()(t,e),P()(t,[{key:"render",value:function(){return f.createElement("div",null,f.createElement(pt.a,{className:"cardContainer",raised:!0},f.createElement(ht.a,null,f.createElement(wn,null))))}}]),t}(f.Component),_n=Object(E.b)(function(e){return{}},function(e){return{}})(Tn),An=n(105),In=n.n(An),xn=function(e){function t(e){x()(this,t);var n=j()(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.handleAuthClick=function(e){window.gapi.auth2.getAuthInstance().signIn(),n.setState({isSignedIn:!0})},n.handleSignoutClick=function(e){window.gapi.auth2.getAuthInstance().signOut(),n.setState({isSignedIn:!1})},n.handleAppendClick=function(e){var t=[["Item1","XL","1","0",(new Date).toUTCString()]];n.props.appendData(q,"RawData!A:E",t)},n.handleUpdateClick=function(e){n.props.updateData(q,[["Item1","Cost","Stocked","Ship Date"],["Wheel1","$20.50","4","3/1/2016"],["Door1","$15","2","3/15/2016"],["Engine1","$100","1","30/20/2016"],["Totals1","=SUM(B2:B4)","=SUM(C2:C4)","=MAX(D2:D4)"]])},n.initClient=function(){window.gapi.client.init({apiKey:G,clientId:Y,discoveryDocs:H,scope:V}).then(function(){n.props.fetchData(q)})},n.state={isSignedIn:null},n}return M()(t,e),P()(t,[{key:"componentWillReceiveProps",value:function(e){e.isScriptLoaded&&!this.props.isScriptLoaded&&window.gapi.load("client:auth2",this.initClient)}},{key:"componentDidMount",value:function(){}},{key:"render",value:function(){var e=this.props,t=e.label,n=e.hasErrored,a=e.isLoading,r=e.items,i=this.state.isSignedIn,o=void 0;return n&&(o=f.createElement("p",null,"Sorry! There was an error loading the items")),o=a?f.createElement("p",null,"Loading…"):f.createElement(f.Fragment,null,f.createElement("div",{className:"container"},f.createElement("div",{className:"container-child"},t)),f.createElement("ul",null,r.map(function(e,t){return f.createElement("li",{key:t},e[0]+e[1])}))),f.createElement(f.Fragment,null,o,f.createElement("button",{onClick:this.handleAppendClick,style:{display:i?"block":"none"}},"Append Data"),f.createElement("br",null),f.createElement("button",{onClick:this.handleUpdateClick,style:{display:i?"block":"none"}},"Update Data"),f.createElement("br",null),f.createElement("button",{id:"authorize_button",onClick:this.handleAuthClick,style:{display:i?"none":"block"}},"Authorize"),f.createElement("button",{id:"signout_button",onClick:this.handleSignoutClick,style:{display:i?"block":"none"}},"Sign Out"))}}]),t}(f.Component),Nn=In()("https://apis.google.com/js/api.js")(Object(E.b)(function(e){return{items:e.items,hasErrored:e.hasErrored,isLoading:e.isLoading,label:e.label}},function(e){return{fetchData:function(t){return e(Z(t))},appendData:function(t,n,a){return e(X(t,n,a))},updateData:function(t,n){return e(function(e,t){return function(n){return $(void 0,void 0,void 0,W.a.mark(function a(){var r,i;return W.a.wrap(function(a){for(;;)switch(a.prev=a.next){case 0:return n(ue(!0)),a.prev=1,a.next=4,window.gapi.client.sheets.spreadsheets.values.update({spreadsheetId:e,range:"A6:D10",valueInputOption:p.USER_ENTERED,includeValuesInResponse:!0,responseValueRenderOption:h.FORMATTED_VALUE,responseDateTimeRenderOption:m.FORMATTED_STRING},{values:t});case 4:return r=a.sent,a.next=7,r.result.values;case 7:i=a.sent,n(pe(i)),a.next=16;break;case 11:throw a.prev=11,a.t0=a.catch(1),n(le(!0)),console.log(a.t0),Error(a.t0);case 16:return a.prev=16,n(ue(!1)),a.finish(16);case 19:case"end":return a.stop()}},a,this,[[1,11,16,19]])}))}}(t,n))}}})(xn)),Pn=n(192),Ln=n.n(Pn),jn=n(191),Rn=n.n(jn),Mn=(n(246),n(194)),Fn=n.n(Mn),zn=n(193),Un=n.n(zn),Bn=[{title:"Домой",route:"/"}],Wn=function(e){function t(e){x()(this,t);var n=j()(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.handleClick=function(e){n.setState({anchorEl:e.currentTarget})},n.handleClose=function(e){var t=n.props.history;location.hash.slice(1)!==e.route&&t.push(e.route),n.setState({anchorEl:null})},n.handleLoginClick=function(){var e=n.props,t=e.isSignedIn,a=e.onLoginClick,r=e.onLogoutClick;t?r():a()},n.state={anchorEl:null},n}return M()(t,e),P()(t,[{key:"renderMenu",value:function(){var e=this,t=this.state.anchorEl,n=Boolean(t),a=location.hash.slice(1);return f.createElement("div",null,f.createElement($e.a,{className:"appbar_menuButton",color:"inherit","aria-label":"Menu","aria-owns":n?"long-menu":null,"aria-haspopup":"true",onClick:this.handleClick},f.createElement(Fn.a,null)),f.createElement(Un.a,{id:"long-menu",anchorEl:t,open:n,onClose:this.handleClose,PaperProps:{style:{maxHeight:216,width:200}}},Bn.map(function(t){return f.createElement(Cn.a,{key:t.title,selected:t.route===a,onClick:function(){return e.handleClose(t)}},t.title)})))}},{key:"render",value:function(){var e=this.props,t=e.title,n=e.isSignedIn;return f.createElement("div",{className:"appbar_root"},f.createElement(Ln.a,{position:"static"},f.createElement(Rn.a,null,this.renderMenu(),f.createElement(De.a,{variant:"title",color:"inherit",className:"appbar_grow"},t),f.createElement(bt.a,{color:"inherit",onClick:this.handleLoginClick},n?"Выйти":"Войти"))))}}]),t}(f.Component),Qn=Object(Kt.a)(Wn),Hn=function(){return f.createElement(F.a,null,f.createElement(z.a,{exact:!0,path:"/",component:vt}),f.createElement(z.a,{path:"/check",component:an}),f.createElement(z.a,{path:"/checkOut",component:un}),f.createElement(z.a,{path:"/partners",component:_n}),f.createElement(z.a,{path:"/test",component:Nn}),f.createElement(z.a,{component:mn}))},Vn=function(e){function t(e){x()(this,t);var n=j()(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.initClient=function(){window.gapi.client.init({apiKey:G,clientId:Y,discoveryDocs:H,scope:V}).then(function(){window.gapi.auth2.getAuthInstance().isSignedIn.listen(n.signinChanged),n.setState({isSignedIn:window.gapi.auth2.getAuthInstance().isSignedIn.get()})})},n.signinChanged=function(e){n.setState({isSignedIn:e})},n.handleAuthClick=function(){window.gapi.auth2.getAuthInstance().signIn()},n.handleSignoutClick=function(){window.gapi.auth2.getAuthInstance().signOut()},n.isSignedIn=function(){return!!(window.gapi&&window.gapi.auth2&&window.gapi.auth2.getAuthInstance())&&window.gapi.auth2.getAuthInstance().isSignedIn.get()},n.state={isSignedIn:null},n}return M()(t,e),P()(t,[{key:"componentWillReceiveProps",value:function(e){e.isScriptLoaded&&!this.props.isScriptLoaded&&window.gapi.load("client:auth2",this.initClient)}},{key:"render",value:function(){var e=this.state.isSignedIn;return f.createElement(f.Fragment,null,f.createElement(Qn,{title:"Главная",isSignedIn:e,onLoginClick:this.handleAuthClick,onLogoutClick:this.handleSignoutClick}),e&&f.createElement(Hn,null))}}]),t}(f.Component),Yn=In()("https://apis.google.com/js/api.js")(Vn);n(242);n(216);var Gn=function(e){return Object(y.c)(T,e,Object(y.a)(v.a))}(w),qn=document.createElement("div");document.body.appendChild(qn),qn.style.height="100%",Object(g.render)(f.createElement(E.a,{store:Gn},f.createElement(A.a,null,f.createElement(Yn,null))),qn)},216:function(e,t,n){e.exports=n.p+"/images/favicon.png"},245:function(e,t,n){(e.exports=n(100)(void 0)).push([e.i,".appbar_root {\n  flex-grow: 1; }\n  .appbar_root .appbar_grow {\n    flex-grow: 1; }\n  .appbar_root .appbar_menuButton {\n    margin-left: -12;\n    margin-right: 20; }\n",""])},246:function(e,t,n){var a=n(245);"string"==typeof a&&(a=[[e.i,a,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(99)(a,r);a.locals&&(e.exports=a.locals)},276:function(e,t,n){e.exports=n.p+"/images/drinks_icon.jpg"},277:function(e,t,n){e.exports=n.p+"/images/desserts_icon.jpg"},306:function(e,t,n){e.exports=n.p+"/images/partners_icon.jpg"},307:function(e,t,n){e.exports=n.p+"/images/main_icon.jpg"},340:function(e,t,n){(e.exports=n(100)(void 0)).push([e.i,".success {\n  background-color: green !important; }\n\n.error {\n  background-color: darkslategray !important; }\n\n.info {\n  background-color: darkslategray !important; }\n\n.warning {\n  background-color: orange !important; }\n\n.icon {\n  font-size: 20; }\n\n.icon-variant {\n  opacity: 0.9;\n  margin-right: 8px; }\n\n.message {\n  display: flex;\n  align-items: center; }\n",""])},341:function(e,t,n){var a=n(340);"string"==typeof a&&(a=[[e.i,a,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(99)(a,r);a.locals&&(e.exports=a.locals)},452:function(e,t,n){(e.exports=n(100)(void 0)).push([e.i,"html, body {\n  font-family: 'Segoe UI';\n  height: 100%; }\n\n.container {\n  height: 100%;\n  width: 100%;\n  font-size: 40px;\n  font-weight: 300; }\n\n.avatar {\n  background-color: #72c3e9;\n  color: #1d53a3; }\n\n.cardContainer {\n  margin: 16px; }\n\n.cardContainerHistory {\n  margin: 16px; }\n\n.cardRoot {\n  padding: 16px 0 16px 0 !important; }\n\n.newOrderButtonsWrapper {\n  display: flex;\n  flex-direction: row; }\n\n.newOrderButton {\n  padding: 5px;\n  width: 100%;\n  height: 100%; }\n\n.buttonsWraper {\n  display: flex;\n  justify-content: space-evenly;\n  margin: 1rem;\n  flex-direction: column; }\n  .buttonsWraper .button {\n    margin: 1rem 0rem; }\n\n.checkoutTitle {\n  text-align: center;\n  margin: 1rem;\n  font-weight: 450; }\n\n.checkoutControlGroup {\n  display: flex;\n  justify-content: space-between;\n  margin: 1rem 2rem 1rem 2rem;\n  flex-direction: column; }\n\n.notificationClose {\n  width: 4rem;\n  height: 4rem; }\n\n.macaronAvatar {\n  margin: 10px;\n  color: black !important; }\n\n.drinkAvatar {\n  margin: 10px;\n  color: #fff !important;\n  background-color: #74482f !important; }\n\n.buttonApplyWraper {\n  display: flex;\n  justify-content: space-evenly; }\n\n.partnerSelectWrapper {\n  width: 100%;\n  padding: 1rem; }\n\n.busy-container {\n  width: 100%;\n  height: 100%;\n  position: fixed;\n  top: 0px;\n  left: 0px;\n  z-index: 9999;\n  background-color: #e6e6e6;\n  opacity: 0.8; }\n  .busy-container .busy {\n    position: absolute;\n    left: 50%;\n    top: 44%;\n    margin-left: -18px; }\n\n.invisible {\n  display: none; }\n\n.historyContainer {\n  width: 100%; }\n",""])},453:function(e,t,n){var a=n(452);"string"==typeof a&&(a=[[e.i,a,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(99)(a,r);a.locals&&(e.exports=a.locals)}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,